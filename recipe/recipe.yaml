schema_version: 1

context:
  component_name: rendering
  repo_name: ${{ "gz-" + component_name }}
  version: 8.2.2
  major_version: "8"
  name: ${{ repo_name + major_version }}
  component_version: ${{ component_name + major_version }}
  cxx_name: ${{ "lib" + name }}

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  - url: https://github.com/gazebosim/${{ repo_name }}/archive/${{ repo_name }}${{ major_version }}_${{ version }}.tar.gz
    sha256: e223a71b5755230cb529c6810e066c4cc694432444ecc648db92bd28838d3367

build:
  number: 0

outputs:
  - package:
      name: ${{ cxx_name }}
    build:
      script:
        - if: unix
          then: build_cxx.sh
        - if: win
          then: bld_cxx.bat
    requirements:
      build:
        - ${{ compiler('cxx') }}
        - ${{ compiler('c') }}
        - ${{ stdlib('c') }}
        - ninja
        - cmake
        - pkg-config
      host:
        - libgz-math7
        - libgz-common5
        - libgz-plugin2
        - libgz-utils2
        - ogre-next
        - ogre 1.10.*
        - if: linux
          then:
            - libglu
            - libglx-devel
            - libopengl-devel
            - libegl-devel
        - if: win
          then:
            - dlfcn-win32
      run:
        - if: linux
          then:
            - libglx-devel
            - libopengl-devel
            - libegl-devel
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/lib${{ name }}${SHLIB_EXT}
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
              - test -f ${PREFIX}/lib/gz-${{ component_name }}-${{ major_version }}/engine-plugins/lib${{ name }}-ogre${SHLIB_EXT}
              - test -f ${PREFIX}/lib/gz-${{ component_name }}-${{ major_version }}/engine-plugins/lib${{ name }}-ogre2${SHLIB_EXT}
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1
              - if not exist %PREFIX%\\Library\\lib\\gz-${{ component_name }}-${{ major_version }}\\engine-plugins\\${{ name }}-ogre.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\gz-${{ component_name }}-${{ major_version }}\\engine-plugins\\${{ name }}-ogre2.dll exit 1

  - package:
      name: ${{ name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=True) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
    tests:
      - script:
          - if: not win
            then:
              - test -f ${PREFIX}/include/gz/${{ component_version }}/gz/${{ component_name }}.hh
              - test -f ${PREFIX}/lib/cmake/${{ name }}/${{ name }}-config.cmake
          - if: linux
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.so
          - if: osx
            then:
              - test -f ${PREFIX}/lib/lib${{ name }}.dylib
          - if: win
            then:
              - if not exist %PREFIX%\\Library\\include\\gz\\${{ component_version }}\\gz\\${{ component_name }}.hh exit 1
              - if not exist %PREFIX%\\Library\\lib\\${{ name }}.lib exit 1
              - if not exist %PREFIX%\\Library\\bin\\${{ name }}.dll exit 1
              - if not exist %PREFIX%\\Library\\lib\\cmake\\${{ name }}\\${{ name }}-config.cmake exit 1

  # Versionless dummy packages, see https://github.com/conda-forge/gz-sim-feedstock/issues/102
  - package:
      name: libgz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(cxx_name, exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-rendering', upper_bound='x') }}
    tests:
      - script:
          - cmake-package-check gz-${{ component_name }}${{ major_version }}
        requirements:
          run:
            - cmake-package-check
            - ${{ compiler('c') }}
            - ${{ compiler('cxx') }}

  - package:
      name: gz-${{ component_name }}
    requirements:
      run:
        - ${{ pin_subpackage(name, exact=true) }}
        - ${{ pin_subpackage('libgz-rendering', exact=true) }}
      run_exports:
        - ${{ pin_subpackage(cxx_name, upper_bound='x') }}
        - ${{ pin_subpackage('libgz-rendering', upper_bound='x') }}
    tests:
      - script:
          - cmake-package-check gz-${{ component_name }}${{ major_version }}
        requirements:
          run:
            - cmake-package-check
            - ${{ compiler('c') }}
            - ${{ compiler('cxx') }}

about:
  homepage: https://github.com/gazebosim/${{ repo_name }}
  license: Apache-2.0
  license_file: LICENSE
  summary: C++ library designed to provide an abstraction for different rendering engines. It offers unified APIs for creating 3D graphics applications.

extra:
  feedstock-name: ${{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
